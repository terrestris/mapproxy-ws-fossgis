"use strict";(self.webpackChunkmapproxy_ws=self.webpackChunkmapproxy_ws||[]).push([[496],{5173:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"config/config","title":"Konfiguration","description":"MapProxy wird mittels \xfcbersichtlicher yaml-Dateien konfiguriert, wobei ebenso eine JSON-Konfiguration g\xfcltig ist. S\xe4mtliche Beispiele in der Dokumentation sind in YAML beschrieben.","source":"@site/docs/config/README.md","sourceDirName":"config","slug":"/config/","permalink":"/MapProxy_Workshop_Praxiseinsatz/docs/config/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"config","title":"Konfiguration","sidebar_position":2,"sidebar_label":"Konfiguration"},"sidebar":"tutorialSidebar","previous":{"title":"MultiMapProxy","permalink":"/MapProxy_Workshop_Praxiseinsatz/docs/introduction/multimapproxy"},"next":{"title":"Bausteine","permalink":"/MapProxy_Workshop_Praxiseinsatz/docs/config/bausteine"}}');var r=i(4848),t=i(8453);const o={id:"config",title:"Konfiguration",sidebar_position:2,sidebar_label:"Konfiguration"},a="Konfiguration",c={},l=[{value:"Seeding",id:"seeding",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"konfiguration",children:"Konfiguration"})}),"\n",(0,r.jsxs)(n.p,{children:["MapProxy wird mittels \xfcbersichtlicher yaml-Dateien konfiguriert, wobei ebenso eine JSON-Konfiguration g\xfcltig ist. S\xe4mtliche Beispiele in der Dokumentation sind in YAML beschrieben.",(0,r.jsx)(n.br,{}),"\n","Es sind Key-Value-Paare und Listen m\xf6glich:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"options-name: value"}),"\n",(0,r.jsx)(n.li,{children:"[1,2,3]\nWichtig zu beachten:"}),"\n",(0,r.jsx)(n.li,{children:"korrekte Einr\xfcckung"}),"\n",(0,r.jsx)(n.li,{children:"Leerzeichen nach Doppelpunkt"}),"\n",(0,r.jsx)(n.li,{children:'Anf\xfchrungszeichen um Strings -> ["EPSG:4326"]'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Die zentrale Konfigurationsdatei ist die ",(0,r.jsx)(n.code,{children:"mapproxy.yaml"}),", nachfolgend ein Auszug aus einem Beispiel:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"services:\n  demo:\n  wms:\n    srs: ['EPSG:4326', 'EPSG:900913', 'EPSG:3857', 'EPSG:4258', 'EPSG:26915']\n    # image_formats: ['image/jpeg', 'image/png']\n    md:\n      # metadata used in capabilities documents\n      title: MapProxy WMS Proxy\n      abstract: This is the fantastic MapProxy.\n      online_resource: http://mapproxy.org/\n      contact:\n        person: Your Name Here\n        position: Technical Director\n      access_constraints:\n        This service is intended for private and evaluation use only.\n        The data is licensed as Creative Commons Attribution-Share Alike 2.0\n        (http://creativecommons.org/licenses/by-sa/2.0/)\n      fees: 'None'\n\nlayers:\n  - name: mapnik\n    title: World population (Mapnik)\n    sources: [mapnik]\n\ncaches:\n  mapnik_cache:\n    grids: [GLOBAL_MERCATOR]\n    sources: [tilestache]\n\nsources:\n  geoserver:\n    type: wms\n    wms_opts:\n      featureinfo: true\n    req:\n      url: http://localhost:8082/geoserver/wms?\n      layers: 'topp:states'\n      transparent: true\n    coverage:\n      bbox: -124.73142200000001,24.955967,-66.969849,49.371735\n      bbox_srs: 'EPSG:4326'\n\ngrids:\n  global_mercator_inverse:\n    base: GLOBAL_MERCATOR\n    origin: nw\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"seeding",children:"Seeding"}),"\n",(0,r.jsxs)(n.p,{children:["Neben dieser Haupt-Konfigurationsdatei wird oftmals eine Konfigurationsdatei f\xfcr eine ",(0,r.jsx)(n.code,{children:"mapproxy-seed"})," eingesetzt:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# ####################################s################################\n#               MapProxy example seed configuration\n# #####################################################################\n#\n# This is _not_ a runnable configuration, but it contains most\n# available options in meaningful combinations.\n#\n# Use this file in addition to the documentation to see where and how\n# things can be configured.\n\nseeds:\n  myseed1:\n    # seed all grids of this cache\n    caches: [osm_cache]\n    levels:\n      to: 10\n    refresh_before:\n      # re-generate tiles older than this date\n      time: 2013-10-10T12:35:00\n\n  myseed2:\n    # seed two caches, but only GLOBAL_GEODETIC grid\n    caches: [cache1, cache2]\n    grids: [GLOBAL_GEODETIC]\n    levels:\n      to: 14\n    refresh_before:\n      # re-generate tiles older than the modification time\n      # of this file. on linux/unix use `touch` to change the time.\n      mtime: ./reseed.time\n\ncleanups:\n  cleanup_older_tiles:\n    caches: [osm_cache]\n    remove_before:\n      days: 30\n    levels:\n        from: 16\n\n  remove_complete_levels:\n    caches: [cache1]\n    # remove all tiles regardless of the timestamp.\n    # will remove the complete level directory for `file` caches\n    remove_all: true\n    levels: [14, 18, 19, 20]\n\n  remove_changes:\n    caches: [cache1]\n    # be careful when using cleanup with coverages, since it needs to check\n    # every possible tile in this coverage (as reported by\n    # `mapproxy-util grids --coverage`). only use small coverages and/or limit\n    # levels\n    coverages: [changed_area]\n    # without remove_before: remove all tiles created before you called\n    # mapproxy-seed. i.e. tiles created before with in this seed run\n    # are not removed\n    levels:\n        from: 14\n        to: 17\n\ncoverages:\n  germany:\n    # any source supported by OGR\n    datasource: 'shps/world_boundaries_m.shp'\n    where: 'CNTRY_NAME = \"Germany\"'\n    srs: 'EPSG:3857'\n  austria:\n    # simple bbox\n    bbox: [9.36, 46.33, 17.28, 49.09]\n    srs: \"EPSG:4326\"\n  switzerland:\n    # text file with WKT (Multi)Polygons\n    datasource: 'polygons/SZ.txt'\n    srs: \"EPSG:3857\"\n  changed_area:\n    # example with PostGIS query\n    datasource: \"PG: dbname='db' host='host' user='user' password='password'\"\n    where: \"select * from last_changes\"\n    srs: 'EPSG:3857'\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);